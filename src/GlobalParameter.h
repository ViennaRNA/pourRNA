/*
 * GlobalParameter.h
 *
 *  Created on: 12.08.2014
 *      Author: Gregor Entzian
 */

#ifndef GLOBALPARAMETER_H_
#define GLOBALPARAMETER_H_

#include <stdio.h>
#include <stdlib.h>
extern "C" {
#include <ViennaRNA/fold_vars.h>
#include <ViennaRNA/move_set.h>
#include <ViennaRNA/params.h>
#include <ViennaRNA/data_structures.h>
}
/**
 * ! This class calculates only once the parameters for the energy model.
 *   The parameters can be used in different methods from the ViennaRNA-
 *   package like move_gradient, browse_neighs and energy_of_structure.
 */
class GlobalParameter
{
public:
  /**
   * ! return only one instance, which is generated by this function.
   */
  static GlobalParameter *
  getInstance ();

  /**
   * ! create the energy parameters, scaled with the given temperature.
   */
  static void
  Initialize (double temperature);

  /**
   * ! return a pointer to the energy parameters of this class.
   */
  paramT *
  getEnergyParameter ()
  {
    return EnergyParameter;
  }
  ~GlobalParameter ();

  double
  getBoltzmannWeightTemperature () const
  {
    return BoltzmannWeightTemperature;
  }

  void
  setBoltzmannWeightTemperature (double boltzmannWeightTemperature = 37)
  {
    BoltzmannWeightTemperature = boltzmannWeightTemperature;
  }

protected:

  /**
   * ! Constructor, which calculates the energy parameters.
   */
  GlobalParameter (double temperature);

private:
  // ! The only instance of this class.
  static GlobalParameter * Instance;
  // ! The BoltzmannWeightTemperature in celsius.
  double BoltzmannWeightTemperature;
protected:
  // ! The parameters for the ViennaRNA energy_* methods.
  paramT * EnergyParameter;
};

#endif /* GLOBALPARAMETER_H_ */
